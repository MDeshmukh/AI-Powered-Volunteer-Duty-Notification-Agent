{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red20\green67\blue174;\red246\green247\blue249;\red46\green49\blue51;
\red24\green25\blue27;\red187\green6\blue115;\red77\green80\blue85;\red162\green0\blue16;\red18\green115\blue126;
}
{\*\expandedcolortbl;;\cssrgb\c9412\c35294\c73725;\cssrgb\c97255\c97647\c98039;\cssrgb\c23529\c25098\c26275;
\cssrgb\c12549\c12941\c14118;\cssrgb\c78824\c15294\c52549;\cssrgb\c37255\c38824\c40784;\cssrgb\c70196\c7843\c7059;\cssrgb\c3529\c52157\c56863;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww25980\viewh14040\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
function\cf4  \cf5 sendDutyReminders\cf4 () \{\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 ss\cf4  = \cf6 SpreadsheetApp\cf4 .\cf5 getActiveSpreadsheet\cf4 ();\cf4 \cb1 \
\cf4 \cb3   \cf4 \cb1 \
\cf4 \cb3   \cf7 // ====== LOG SHEET SETUP ======\cf4 \cb1 \
\cf4 \cb3   \cf2 let\cf4  \cf5 logSheet\cf4  = \cf5 ss\cf4 .\cf5 getSheetByName\cf4 (\cf8 "EmailLog"\cf4 );\cf4 \cb1 \
\cf4 \cb3   \cf2 if\cf4  (!\cf5 logSheet\cf4 ) \{\cf4 \cb1 \
\cf4 \cb3     \cf5 logSheet\cf4  = \cf5 ss\cf4 .\cf5 insertSheet\cf4 (\cf8 "EmailLog"\cf4 );\cf4 \cb1 \
\cf4 \cb3     \cf5 logSheet\cf4 .\cf5 appendRow\cf4 ([\cf8 "Timestamp"\cf4 , \cf8 "Email Type"\cf4 , \cf8 "Recipient Name"\cf4 , \cf8 "Recipient Email"\cf4 , \cf8 "Status"\cf4 , \cf8 "Message"\cf4 ]);\cf4 \cb1 \
\cf4 \cb3   \}\cf4 \cb1 \
\cf4 \cb3   \cf4 \cb1 \
\cf4 \cb3   \cf2 function\cf4  \cf5 logEmail\cf4 (\cf5 type\cf4 , \cf5 name\cf4 , \cf5 email\cf4 , \cf5 status\cf4 , \cf5 message\cf4 ) \{\cf4 \cb1 \
\cf4 \cb3     \cf5 logSheet\cf4 .\cf5 appendRow\cf4 ([\cf2 new\cf4  \cf6 Date\cf4 (), \cf5 type\cf4 , \cf5 name\cf4  || \cf8 ""\cf4 , \cf5 email\cf4  || \cf8 ""\cf4 , \cf5 status\cf4 , \cf5 message\cf4  || \cf8 ""\cf4 ]);\cf4 \cb1 \
\cf4 \cb3   \}\cf4 \cb1 \
\cf4 \cb3   \cf4 \cb1 \
\cf4 \cb3   \cf7 // ====== MAIN SHEET ======\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 sheet\cf4  = \cf5 ss\cf4 .\cf5 getSheetByName\cf4 (\cf8 "Sheet1"\cf4 ); \cf7 // Change if needed\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 data\cf4  = \cf5 sheet\cf4 .\cf5 getDataRange\cf4 ().\cf5 getValues\cf4 ();\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 headers\cf4  = \cf5 data\cf4 [\cf9 0\cf4 ];\cf4 \cb1 \
\cf4 \cb3   \cf4 \cb1 \
\cf4 \cb3   \cf7 // ====== DATE DETECTION ======\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 today\cf4  = \cf2 new\cf4  \cf6 Date\cf4 ();\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 tomorrow\cf4  = \cf2 new\cf4  \cf6 Date\cf4 (\cf5 today\cf4 .\cf5 getFullYear\cf4 (), \cf5 today\cf4 .\cf5 getMonth\cf4 (), \cf5 today\cf4 .\cf5 getDate\cf4 () + \cf9 1\cf4 );\cf4 \cb1 \
\cf4 \cb3   \cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 dateColIndex\cf4  = \cf5 headers\cf4 .\cf5 findIndex\cf4 (\cf5 h\cf4  => \{\cf4 \cb1 \
\cf4 \cb3     \cf2 if\cf4  (!\cf5 h\cf4 ) \cf2 return\cf4  \cf2 false\cf4 ;\cf4 \cb1 \
\cf4 \cb3     \cf2 let\cf4  \cf5 headerDate\cf4 ;\cf4 \cb1 \
\cf4 \cb3     \cf2 if\cf4  (\cf6 Object\cf4 .\cf5 prototype\cf4 .\cf5 toString\cf4 .\cf5 call\cf4 (\cf5 h\cf4 ) === \cf8 "[object Date]"\cf4  && !\cf5 isNaN\cf4 (\cf5 h\cf4 )) \{\cf4 \cb1 \
\cf4 \cb3       \cf5 headerDate\cf4  = \cf2 new\cf4  \cf6 Date\cf4 (\cf5 h\cf4 .\cf5 getFullYear\cf4 (), \cf5 h\cf4 .\cf5 getMonth\cf4 (), \cf5 h\cf4 .\cf5 getDate\cf4 ());\cf4 \cb1 \
\cf4 \cb3     \} \cf2 else\cf4  \{\cf4 \cb1 \
\cf4 \cb3       \cf2 let\cf4  \cf5 parsed\cf4  = \cf2 new\cf4  \cf6 Date\cf4 (\cf5 h\cf4 );\cf4 \cb1 \
\cf4 \cb3       \cf2 if\cf4  (!\cf5 isNaN\cf4 (\cf5 parsed\cf4 )) \{\cf4 \cb1 \
\cf4 \cb3         \cf5 headerDate\cf4  = \cf2 new\cf4  \cf6 Date\cf4 (\cf5 parsed\cf4 .\cf5 getFullYear\cf4 (), \cf5 parsed\cf4 .\cf5 getMonth\cf4 (), \cf5 parsed\cf4 .\cf5 getDate\cf4 ());\cf4 \cb1 \
\cf4 \cb3       \}\cf4 \cb1 \
\cf4 \cb3     \}\cf4 \cb1 \
\cf4 \cb3     \cf2 return\cf4  \cf5 headerDate\cf4  && \cf5 headerDate\cf4 .\cf5 getTime\cf4 () === \cf5 tomorrow\cf4 .\cf5 getTime\cf4 ();\cf4 \cb1 \
\cf4 \cb3   \});\cf4 \cb1 \
\cf4 \cb3   \cf4 \cb1 \
\cf4 \cb3   \cf2 if\cf4  (\cf5 dateColIndex\cf4  === -\cf9 1\cf4 ) \{\cf4 \cb1 \
\cf4 \cb3     \cf5 logEmail\cf4 (\cf8 "System"\cf4 , \cf8 ""\cf4 , \cf8 ""\cf4 , \cf8 "Failed"\cf4 , \cf8 "Tomorrow's date column not found"\cf4 );\cf4 \cb1 \
\cf4 \cb3     \cf2 return\cf4 ;\cf4 \cb1 \
\cf4 \cb3   \}\cf4 \cb1 \
\cf4 \cb3   \cf4 \cb1 \
\cf4 \cb3   \cf7 // ====== FIND VOLUNTEERS ======\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 validMarkers\cf4  = [\cf8 "yes"\cf4 , \cf8 "y"\cf4 , \cf8 "available"\cf4 , \cf8 "ok"\cf4 , \cf8 "present"\cf4 , \cf8 "1"\cf4 ];\cf4 \cb1 \
\cf4 \cb3   \cf2 let\cf4  \cf5 volunteers\cf4  = [];\cf4 \cb1 \
\cf4 \cb3   \cf4 \cb1 \
\cf4 \cb3   \cf2 for\cf4  (\cf2 let\cf4  \cf5 i\cf4  = \cf9 1\cf4 ; \cf5 i\cf4  < \cf5 data\cf4 .\cf5 length\cf4 ; \cf5 i\cf4 ++) \{\cf4 \cb1 \
\cf4 \cb3     \cf2 if\cf4  (\cf5 data\cf4 [\cf5 i\cf4 ][\cf5 dateColIndex\cf4 ]) \{\cf4 \cb1 \
\cf4 \cb3       \cf2 let\cf4  \cf5 val\cf4  = \cf5 data\cf4 [\cf5 i\cf4 ][\cf5 dateColIndex\cf4 ].\cf5 toString\cf4 ().\cf5 trim\cf4 ().\cf5 toLowerCase\cf4 ();\cf4 \cb1 \
\cf4 \cb3       \cf2 if\cf4  (\cf5 validMarkers\cf4 .\cf5 includes\cf4 (\cf5 val\cf4 )) \{\cf4 \cb1 \
\cf4 \cb3         \cf5 volunteers\cf4 .\cf5 push\cf4 (\{\cf4 \cb1 \
\cf4 \cb3           \cf5 name\cf4 : \cf5 data\cf4 [\cf5 i\cf4 ][\cf9 0\cf4 ],\cf4 \cb1 \
\cf4 \cb3           \cf5 email\cf4 : \cf5 data\cf4 [\cf5 i\cf4 ][\cf9 2\cf4 ]\cf4 \cb1 \
\cf4 \cb3         \});\cf4 \cb1 \
\cf4 \cb3       \}\cf4 \cb1 \
\cf4 \cb3     \}\cf4 \cb1 \
\cf4 \cb3   \}\cf4 \cb1 \
\cf4 \cb3   \cf4 \cb1 \
\cf4 \cb3   \cf7 // ====== SEND REMINDERS ======\cf4 \cb1 \
\cf4 \cb3   \cf5 volunteers\cf4 .\cf5 forEach\cf4 (\cf5 v\cf4  => \{\cf4 \cb1 \
\cf4 \cb3     \cf2 if\cf4  (\cf5 v\cf4 .\cf5 email\cf4 ) \{\cf4 \cb1 \
\cf4 \cb3       \cf2 try\cf4  \{\cf4 \cb1 \
\cf4 \cb3         \cf6 GmailApp\cf4 .\cf5 sendEmail\cf4 (\cf4 \cb1 \
\cf4 \cb3           \cf5 v\cf4 .\cf5 email\cf4 ,\cf4 \cb1 \
\cf4 \cb3           \cf8 "Gentle Reminder for Tomorrow Duty"\cf4 ,\cf4 \cb1 \
\cf4 \cb3           \cf8 "Dear "\cf4  + \cf5 v\cf4 .\cf5 name\cf4  + \cf8 ",\\n\\nA gentle reminder for tomorrow's duty.\\n\\nThank you."\cf4 \cb1 \
\cf4 \cb3         );\cf4 \cb1 \
\cf4 \cb3         \cf5 logEmail\cf4 (\cf8 "Reminder"\cf4 , \cf5 v\cf4 .\cf5 name\cf4 , \cf5 v\cf4 .\cf5 email\cf4 , \cf8 "Sent"\cf4 , \cf8 ""\cf4 );\cf4 \cb1 \
\cf4 \cb3       \} \cf2 catch\cf4  (\cf5 err\cf4 ) \{\cf4 \cb1 \
\cf4 \cb3         \cf5 logEmail\cf4 (\cf8 "Reminder"\cf4 , \cf5 v\cf4 .\cf5 name\cf4 , \cf5 v\cf4 .\cf5 email\cf4 , \cf8 "Failed"\cf4 , \cf5 err\cf4 .\cf5 message\cf4 );\cf4 \cb1 \
\cf4 \cb3       \}\cf4 \cb1 \
\cf4 \cb3     \}\cf4 \cb1 \
\cf4 \cb3   \});\cf4 \cb1 \
\cf4 \cb3   \cf4 \cb1 \
\cf4 \cb3   \cf7 // ====== READ COORDINATORS ======\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 coordSheet\cf4  = \cf5 ss\cf4 .\cf5 getSheetByName\cf4 (\cf8 "Coordinators"\cf4 );\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 coordData\cf4  = \cf5 coordSheet\cf4 .\cf5 getRange\cf4 (\cf9 2\cf4 , \cf9 1\cf4 , \cf5 coordSheet\cf4 .\cf5 getLastRow\cf4 () - \cf9 1\cf4 , \cf9 1\cf4 ).\cf5 getValues\cf4 ();\cf4 \cb1 \
\cf4 \cb3   \cf2 let\cf4  \cf5 coordinators\cf4  = \cf5 coordData\cf4 .\cf5 flat\cf4 ().\cf5 filter\cf4 (\cf5 e\cf4  => \cf5 e\cf4 );\cf4 \cb1 \
\cf4 \cb3   \cf4 \cb1 \
\cf4 \cb3   \cf7 // ====== SEND SINGLE SUMMARY EMAIL WITH CC ======\cf4 \cb1 \
\cf4 \cb3   \cf2 if\cf4  (\cf5 coordinators\cf4 .\cf5 length\cf4  > \cf9 0\cf4 ) \{\cf4 \cb1 \
\cf4 \cb3     \cf2 let\cf4  \cf5 volunteerList\cf4  = \cf5 volunteers\cf4 .\cf5 map\cf4 (\cf5 v\cf4  => \cf5 v\cf4 .\cf5 name\cf4  + \cf8 " ("\cf4  + \cf5 v\cf4 .\cf5 email\cf4  + \cf8 ")"\cf4 ).\cf5 join\cf4 (\cf8 "\\n"\cf4 );\cf4 \cb1 \
\cf4 \cb3     \cf2 if\cf4  (!\cf5 volunteerList\cf4 ) \cf5 volunteerList\cf4  = \cf8 "No volunteers available."\cf4 ;\cf4 \cb1 \
\cf4 \cb3     \cf4 \cb1 \
\cf4 \cb3     \cf2 let\cf4  \cf5 toEmail\cf4  = \cf5 coordinators\cf4 [\cf9 0\cf4 ];\cf4 \cb1 \
\cf4 \cb3     \cf2 let\cf4  \cf5 ccEmails\cf4  = \cf5 coordinators\cf4 .\cf5 slice\cf4 (\cf9 1\cf4 ).\cf5 join\cf4 (\cf8 ","\cf4 );\cf4 \cb1 \
\cf4 \cb3     \cf4 \cb1 \
\cf4 \cb3     \cf2 try\cf4  \{\cf4 \cb1 \
\cf4 \cb3       \cf6 GmailApp\cf4 .\cf5 sendEmail\cf4 (\cf4 \cb1 \
\cf4 \cb3         \cf5 toEmail\cf4 ,\cf4 \cb1 \
\cf4 \cb3         \cf8 "List of Volunteer(s) on duty tomorrow"\cf4 ,\cf4 \cb1 \
\cf4 \cb3         \cf8 "Hi, \\n\\nBelow is the list of Volunteer(s) available for duty tomorrow:\\n\\n"\cf4  + \cf5 volunteerList\cf4 ,\cf4 \cb1 \
\cf4 \cb3         \{ \cf5 cc\cf4 : \cf5 ccEmails\cf4  \}\cf4 \cb1 \
\cf4 \cb3       );\cf4 \cb1 \
\cf4 \cb3       \cf5 logEmail\cf4 (\cf8 "Summary"\cf4 , \cf8 ""\cf4 , \cf5 toEmail\cf4  + (\cf5 ccEmails\cf4  ? \cf8 ", "\cf4  + \cf5 ccEmails\cf4  : \cf8 ""\cf4 ), \cf8 "Sent"\cf4 , \cf8 ""\cf4 );\cf4 \cb1 \
\cf4 \cb3     \} \cf2 catch\cf4  (\cf5 err\cf4 ) \{\cf4 \cb1 \
\cf4 \cb3       \cf5 logEmail\cf4 (\cf8 "Summary"\cf4 , \cf8 ""\cf4 , \cf5 toEmail\cf4  + (\cf5 ccEmails\cf4  ? \cf8 ", "\cf4  + \cf5 ccEmails\cf4  : \cf8 ""\cf4 ), \cf8 "Failed"\cf4 , \cf5 err\cf4 .\cf5 message\cf4 );\cf4 \cb1 \
\cf4 \cb3     \}\cf4 \cb1 \
\cf4 \cb3   \}\cf4 \cb1 \
\cf4 \cb3 \}\cf4 \cb1 \
\
\cf2 \cb3 function\cf4  \cf5 sendCustomCoordinatorEmail\cf4 () \{\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 ss\cf4  = \cf6 SpreadsheetApp\cf4 .\cf5 getActiveSpreadsheet\cf4 ();\cf4 \cb1 \
\
\cf4 \cb3   \cf7 // ==== Get coordinators ====\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 coordSheet\cf4  = \cf5 ss\cf4 .\cf5 getSheetByName\cf4 (\cf8 "Coordinators"\cf4 );\cf4 \cb1 \
\cf4 \cb3   \cf2 if\cf4  (!\cf5 coordSheet\cf4 ) \{\cf4 \cb1 \
\cf4 \cb3     \cf6 Logger\cf4 .\cf5 log\cf4 (\cf8 "Coordinators sheet not found."\cf4 );\cf4 \cb1 \
\cf4 \cb3     \cf2 return\cf4 ;\cf4 \cb1 \
\cf4 \cb3   \}\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 coordinatorEmails\cf4  = \cf5 coordSheet\cf4 \cb1 \
\cf4 \cb3     .\cf5 getRange\cf4 (\cf9 2\cf4 , \cf9 1\cf4 , \cf5 coordSheet\cf4 .\cf5 getLastRow\cf4 () - \cf9 1\cf4 , \cf9 1\cf4 )\cf4 \cb1 \
\cf4 \cb3     .\cf5 getValues\cf4 ()\cf4 \cb1 \
\cf4 \cb3     .\cf5 flat\cf4 ()\cf4 \cb1 \
\cf4 \cb3     .\cf5 filter\cf4 (\cf5 email\cf4  => \cf5 email\cf4  && \cf5 email\cf4 .\cf5 toString\cf4 ().\cf5 trim\cf4 () !== \cf8 ""\cf4 );\cf4 \cb1 \
\
\cf4 \cb3   \cf2 if\cf4  (\cf5 coordinatorEmails\cf4 .\cf5 length\cf4  === \cf9 0\cf4 ) \{\cf4 \cb1 \
\cf4 \cb3     \cf6 Logger\cf4 .\cf5 log\cf4 (\cf8 "No coordinator emails found."\cf4 );\cf4 \cb1 \
\cf4 \cb3     \cf2 return\cf4 ;\cf4 \cb1 \
\cf4 \cb3   \}\cf4 \cb1 \
\
\cf4 \cb3   \cf7 // ==== Get volunteers for tomorrow ====\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 rosterSheet\cf4  = \cf5 ss\cf4 .\cf5 getSheetByName\cf4 (\cf8 "Sheet1"\cf4 ); \cf7 // change if needed\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 headerRow\cf4  = \cf5 rosterSheet\cf4 .\cf5 getRange\cf4 (\cf9 1\cf4 , \cf9 1\cf4 , \cf9 1\cf4 , \cf5 rosterSheet\cf4 .\cf5 getLastColumn\cf4 ()).\cf5 getValues\cf4 ()[\cf9 0\cf4 ];\cf4 \cb1 \
\cf4 \cb3   \cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 nameColIndex\cf4  = \cf5 headerRow\cf4 .\cf5 findIndex\cf4 (\cf5 h\cf4  => \cf5 h\cf4 .\cf5 toString\cf4 ().\cf5 toLowerCase\cf4 ().\cf5 trim\cf4 () === \cf8 "name"\cf4 );\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 phoneColIndex\cf4  = \cf5 headerRow\cf4 .\cf5 findIndex\cf4 (\cf5 h\cf4  => \cf5 h\cf4 .\cf5 toString\cf4 ().\cf5 toLowerCase\cf4 ().\cf5 trim\cf4 () === \cf8 "mobile number"\cf4 );\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 emailColIndex\cf4  = \cf5 headerRow\cf4 .\cf5 findIndex\cf4 (\cf5 h\cf4  => \cf5 h\cf4 .\cf5 toString\cf4 ().\cf5 toLowerCase\cf4 ().\cf5 trim\cf4 () === \cf8 "email"\cf4 );\cf4 \cb1 \
\
\cf4 \cb3   \cf2 if\cf4  (\cf5 nameColIndex\cf4  === -\cf9 1\cf4  || \cf5 phoneColIndex\cf4  === -\cf9 1\cf4  || \cf5 emailColIndex\cf4  === -\cf9 1\cf4 ) \{\cf4 \cb1 \
\cf4 \cb3     \cf6 Logger\cf4 .\cf5 log\cf4 (\cf8 "One or more required columns ('Name', 'Mobile Number', 'Email') not found."\cf4 );\cf4 \cb1 \
\cf4 \cb3     \cf2 return\cf4 ;\cf4 \cb1 \
\cf4 \cb3   \}\cf4 \cb1 \
\
\cf4 \cb3   \cf2 const\cf4  \cf5 tomorrow\cf4  = \cf2 new\cf4  \cf6 Date\cf4 ();\cf4 \cb1 \
\cf4 \cb3   \cf5 tomorrow\cf4 .\cf5 setDate\cf4 (\cf5 tomorrow\cf4 .\cf5 getDate\cf4 () + \cf9 1\cf4 );\cf4 \cb1 \
\
\cf4 \cb3   \cf2 const\cf4  \cf5 tomorrowColIndex\cf4  = \cf5 headerRow\cf4 .\cf5 findIndex\cf4 (\cf5 h\cf4  => \{\cf4 \cb1 \
\cf4 \cb3     \cf2 const\cf4  \cf5 parsedDate\cf4  = \cf2 new\cf4  \cf6 Date\cf4 (\cf5 h\cf4 );\cf4 \cb1 \
\cf4 \cb3     \cf2 return\cf4  !\cf5 isNaN\cf4 (\cf5 parsedDate\cf4 ) && \cf5 parsedDate\cf4 .\cf5 toDateString\cf4 () === \cf5 tomorrow\cf4 .\cf5 toDateString\cf4 ();\cf4 \cb1 \
\cf4 \cb3   \});\cf4 \cb1 \
\
\cf4 \cb3   \cf2 if\cf4  (\cf5 tomorrowColIndex\cf4  === -\cf9 1\cf4 ) \{\cf4 \cb1 \
\cf4 \cb3     \cf6 Logger\cf4 .\cf5 log\cf4 (\cf8 "No column found for tomorrow's date."\cf4 );\cf4 \cb1 \
\cf4 \cb3     \cf2 return\cf4 ;\cf4 \cb1 \
\cf4 \cb3   \}\cf4 \cb1 \
\
\cf4 \cb3   \cf2 const\cf4  \cf5 data\cf4  = \cf5 rosterSheet\cf4 .\cf5 getRange\cf4 (\cf9 2\cf4 , \cf9 1\cf4 , \cf5 rosterSheet\cf4 .\cf5 getLastRow\cf4 () - \cf9 1\cf4 , \cf5 rosterSheet\cf4 .\cf5 getLastColumn\cf4 ()).\cf5 getValues\cf4 ();\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 volunteers\cf4  = \cf5 data\cf4 \cb1 \
\cf4 \cb3     .\cf5 filter\cf4 (\cf5 row\cf4  => \cf5 row\cf4 [\cf5 tomorrowColIndex\cf4 ] && \cf5 row\cf4 [\cf5 tomorrowColIndex\cf4 ].\cf5 toString\cf4 ().\cf5 trim\cf4 () !== \cf8 ""\cf4 )\cf4 \cb1 \
\cf4 \cb3     .\cf5 map\cf4 (\cf5 row\cf4  => (\{\cf4 \cb1 \
\cf4 \cb3       \cf5 name\cf4 : \cf5 row\cf4 [\cf5 nameColIndex\cf4 ],\cf4 \cb1 \
\cf4 \cb3       \cf5 phone\cf4 : \cf5 row\cf4 [\cf5 phoneColIndex\cf4 ]\cf4 \cb1 \
\cf4 \cb3     \}));\cf4 \cb1 \
\
\cf4 \cb3   \cf7 // ==== Build email body dynamically ====\cf4 \cb1 \
\cf4 \cb3   \cf2 let\cf4  \cf5 body\cf4  = \cf8 "Hi,\\n\\n"\cf4 ;\cf4 \cb1 \
\cf4 \cb3   \cf5 body\cf4  += \cf8 "Please add the below mentioned Volunteer(s) in WhatsApp communication group:\\n\\n"\cf4 ;\cf4 \cb1 \
\cf4 \cb3   \cf2 if\cf4  (\cf5 volunteers\cf4 .\cf5 length\cf4  > \cf9 0\cf4 ) \{\cf4 \cb1 \
\cf4 \cb3     \cf5 volunteers\cf4 .\cf5 forEach\cf4 ((\cf5 v\cf4 , \cf5 i\cf4 ) => \{\cf4 \cb1 \
\cf4 \cb3       \cf5 body\cf4  += \cf8 `\cf4 $\{\cf5 i\cf4  + \cf9 1\cf4 \}\cf8 . \cf4 $\{\cf5 v\cf4 .\cf5 name\cf4 \}\cf8  \'97 \cf4 $\{\cf5 v\cf4 .\cf5 phone\cf4 \}\cf8 \\n`\cf4 ;\cf4 \cb1 \
\cf4 \cb3     \});\cf4 \cb1 \
\cf4 \cb3   \} \cf2 else\cf4  \{\cf4 \cb1 \
\cf4 \cb3     \cf5 body\cf4  += \cf8 "No volunteers are currently marked their availability for tomorrow.\\n"\cf4 ;\cf4 \cb1 \
\cf4 \cb3   \}\cf4 \cb1 \
\cf4 \cb3   \cf5 body\cf4  += \cf8 "\\nBest regards,\\nABC\'94\cf4 ;\cf4 \cb1 \
\
\cf4 \cb3   \cf7 // ==== Send email ====\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 to\cf4  = \cf5 coordinatorEmails\cf4 [\cf9 0\cf4 ];\cf4 \cb1 \
\cf4 \cb3   \cf2 const\cf4  \cf5 cc\cf4  = \cf5 coordinatorEmails\cf4 .\cf5 slice\cf4 (\cf9 1\cf4 ).\cf5 join\cf4 (\cf8 ","\cf4 );\cf4 \cb1 \
\
\cf4 \cb3   \cf6 GmailApp\cf4 .\cf5 sendEmail\cf4 (\cf5 to\cf4 , \cf8 "List of Volunteer(s) on duty tomorrow"\cf4 , \cf5 body\cf4 , \{\cf4 \cb1 \
\cf4 \cb3     \cf5 cc\cf4 : \cf5 cc\cf4 \cb1 \
\cf4 \cb3   \});\cf4 \cb1 \
\
\cf4 \cb3   \cf6 Logger\cf4 .\cf5 log\cf4 (\cf8 `Dynamic email sent to coordinators: \cf4 $\{\cf5 to\cf4 \}\cf8  + CC: \cf4 $\{\cf5 cc\cf4 \}\cf8 `\cf4 );\cf4 \cb1 \
\cf4 \cb3  \cf4 \cb1 \
\cf4 \cb3 \}\cf4 \cb1 \
\
\
\
\
\
\
\
}